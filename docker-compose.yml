services:
  app:
    #build:
    #  context: .
    #  dockerfile: Dockerfile
    image: registry.autojidelna.cz/autojidelna:latest
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host # Or "ingress"
    depends_on:
      - db
    environment:
      - APP_PORT=80
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_DB_FILE=/run/secrets/postgres_db
      - GOOGLE_APPLICATION_CREDENTIALS=/run/secrets/firebase_admin
    secrets:
      - postgres_user
      - postgres_password
      - postgres_db
      - firebase_admin
    deploy:
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any

  db:
    image: postgres:13-alpine
    deploy:
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
    environment:
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_DB_FILE=/run/secrets/postgres_db
    secrets:
      - postgres_user
      - postgres_password
      - postgres_db
    ports:
      - "5432:5432"
    volumes:
      - /var/lib/postgresql/data:/var/lib/postgresql/data

secrets:
  postgres_user:
    external: true
  postgres_password:
    external: true
  postgres_db:
    external: true
  firebase_admin:
    external: true

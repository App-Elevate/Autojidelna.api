{
    "swagger": "2.0",
    "info": {
        "description": "This is an example for all api server projects in App Elevate",
        "title": "APPE COREE example server",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/db/user": {
            "post": {
                "description": "create a user using post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DB Example API"
                ],
                "summary": "Create a user",
                "parameters": [
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dbexample.UserCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/dbexample.UserGet"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/db/user/{name}": {
            "get": {
                "description": "Get a User by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DB Example API"
                ],
                "summary": "Get a User by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/dbexample.UserGet"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Crash the server",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Health Check"
                ],
                "summary": "Health check for the server",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sentry/crash": {
            "get": {
                "description": "Crash the server",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sentry Test API"
                ],
                "summary": "Crashes the server and sends a report to Sentry",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dbexample.UserCreate": {
            "type": "object",
            "required": [
                "age",
                "name"
            ],
            "properties": {
                "age": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dbexample.UserGet": {
            "type": "object",
            "required": [
                "age",
                "id",
                "name"
            ],
            "properties": {
                "age": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "description": "API for testing that the database is setup correctly",
            "name": "DB Example API"
        },
        {
            "description": "Api for testing Sentry is setup correctly",
            "name": "Sentry Test API"
        },
        {
            "description": "Health Check for this API",
            "name": "Health Check"
        }
    ]
}